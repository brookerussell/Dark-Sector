Here are some instructions for how to run the simulation! :)

Author: Elizabeth Himwich, Yale University

First, you will need to modify the GEANT and CRY source directory information and environment variables. All of the information that the simulation wants should be specified in cryGeantSim/CMakeLists.txt.

You will also need to make sure the Mina/DStudy package is pulled from LArLite, and that LArLite is sourced.

To create the executable, make a build directory:

$ mkdir build
$ cd build

Then, set cmake:

$ cmake ..
---------------------------------------------------------------------------
If your Geant4 library directory isn't set, you will need to specify it, e.g.:

$ cmake -DGeant4_DIR=~/BasicSoftware/Geant4/geant4.9.6.p04-build/lib/Geant4-9.6.4/ ..

You may also need to set the location of the G4EMLow data packages (which might also need to be installed separately... :). I've made this a permanent change in my .bashrc file, e.g.:

$ export G4LEDATA=~/BasicSoftware/Geant4/geant4.9.6.p04-build/share/Geant4-9.6.4/data/G4EMLOW6.32
---------------------------------------------------------------------------

Now make!

$ make

The executable is called "read" and I usually run it from the top directory:

$ cd ..
$ ./build/read

================== HOW TO MODIFY EXECUTABLE PARAMETERS ====================

These are all stored in cryGeantSim/macros/vis.mac

To specify the number of events in the run (set to 100 below) use:

/run/beamOn 100 

To change CRY configurations, change parameters called

/CRY/input

The input parameters specified here are actually ALL of the parameters CRY allows users to change; this is an exhaustive list.

=========================================================================

It will generate an output TTree called "DS_uboone_mina.root" that can be analyzed in LArLite. WARNING: THIS FILE WILL BE VERY BIG FOR A LARGE NUMBER OF EVENTS.

Analysis in LArLite is done using Mina's container classes with the analysis module DSAna. In order to run it, you should use:

$ cd $LARLITE_BASEDIR/UserDev/Mina/DStudy/mac/
$ cp */cryGeantSim/DS_uboone_mina.root .
$ python dark_sector_ana.py 

This will generate output histograms in cryGeantSim_analyzed.root. 

The histogram names are specified in cryGeantSim/read.cc and UserDev/Mina/DStudy/DSAna.cxx so you will need to recompile after you change the name. 

More info about histograms pending...

